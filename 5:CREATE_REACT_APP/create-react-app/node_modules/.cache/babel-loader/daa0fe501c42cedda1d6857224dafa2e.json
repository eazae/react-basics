{"ast":null,"code":"var _jsxFileName = \"/Users/uniqlear/Documents/React/react-basics/create-react-app/src/App6.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // (create-react-app이기 때문에, \"React.useState()\"로 할 필요없이 바로 import해서 사용가능)\n  // recap) useState()는 [(value), (modifier function)] 배열을 반환함\n  const [counter, setValue] = useState(0);\n\n  const onClick = () => setValue(prev => prev + 1); // render(+re-render)가 일어나는 시점을 찍어보자\n\n\n  console.log('render..');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"EUzoNIvaQFnL6SK9HZEHnaOBWAs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/uniqlear/Documents/React/react-basics/create-react-app/src/App6.js"],"names":["useState","App","counter","setValue","onClick","prev","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBH,QAAQ,CAAC,CAAD,CAApC;;AACA,QAAMI,OAAO,GAAG,MAAMD,QAAQ,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAA9B,CAJa,CAMb;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAQ,MAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD;;GAhBQH,G;;KAAAA,G;AAkBT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\n\nfunction App() {\n  // (create-react-app이기 때문에, \"React.useState()\"로 할 필요없이 바로 import해서 사용가능)\n  // recap) useState()는 [(value), (modifier function)] 배열을 반환함\n  const [counter, setValue] = useState(0);\n  const onClick = () => setValue((prev) => prev + 1);\n\n  // render(+re-render)가 일어나는 시점을 찍어보자\n  console.log('render..');\n\n  return (\n    <>\n      <h1>{counter}</h1>\n      {/* create-react-app 기반이기 때문에 \"on..\"까지만 입력해도 이벤트가 자동완성지원 */}\n      <button onClick={onClick}>click me!</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}