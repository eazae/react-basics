{"ast":null,"code":"var _jsxFileName = \"/Users/uniqlear/Documents/React/react-basics/create-react-app/src/App6.js\",\n    _s = $RefreshSig$();\n\n/* create-react-app 프로젝트를 기반으로 한 코드. 따로 이 폴더로 빼온 것 (실행 X) */\n\n/* Deps: useEffect()의 2번째 argument */\n// 또 다른 문제점을 보며, Deps가 그 문제점을 어떻게 해결하는지 보자.\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [counter, setValue] = useState(0); // state 추가\n\n  const [keyword, setKeyword] = useState('');\n\n  const onClick = () => setValue(prev => prev + 1);\n\n  const thisRunsOnlyOnce = () => {\n    console.log('I run only once');\n  };\n\n  useEffect(() => {\n    console.log('CALL THE API...');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"A/g9a6+6hc3WidtgHHul6/a+eNI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/uniqlear/Documents/React/react-basics/create-react-app/src/App6.js"],"names":["useState","useEffect","App","counter","setValue","keyword","setKeyword","onClick","prev","thisRunsOnlyOnce","console","log"],"mappings":";;;AAAA;;AAEA;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBJ,QAAQ,CAAC,CAAD,CAApC,CADa,CAEb;;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMO,OAAO,GAAG,MAAMH,QAAQ,CAAEI,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAA9B;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,GAFD;;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD;;GArBQL,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["/* create-react-app 프로젝트를 기반으로 한 코드. 따로 이 폴더로 빼온 것 (실행 X) */\n\n/* Deps: useEffect()의 2번째 argument */\n// 또 다른 문제점을 보며, Deps가 그 문제점을 어떻게 해결하는지 보자.\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [counter, setValue] = useState(0);\n  // state 추가\n  const [keyword, setKeyword] = useState('');\n  const onClick = () => setValue((prev) => prev + 1);\n\n  const thisRunsOnlyOnce = () => {\n    console.log('I run only once');\n  };\n  useEffect(() => {\n    console.log('CALL THE API...');\n  }, []);\n\n  return (\n    <>\n      {/* 검색창 예제: state와 input 콤비네이션을 연습해보자 */}\n      <input type=\"text\" placeholder=\"Search here...\" />\n      <h1>{counter}</h1>\n      <button onClick={onClick}>click me!</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}