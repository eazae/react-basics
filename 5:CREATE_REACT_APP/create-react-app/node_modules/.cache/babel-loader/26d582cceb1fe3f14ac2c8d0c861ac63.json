{"ast":null,"code":"var _jsxFileName = \"/Users/uniqlear/Documents/React/react-basics/create-react-app/src/App6.js\",\n    _s = $RefreshSig$();\n\n/* create-react-app 프로젝트를 기반으로 한 코드. 따로 이 폴더로 빼온 것 (실행 X) */\n\n/* 6-0의 문제에 대한 해결책: Effects (useEffect() 함수) */\n//? 특정 코드 실행의 제한 (특정 코드가, 첫번째 render에만 실행되고, 다른 state변화에는 실행되지 않도록 함)\n//! useEffect(): (ReactJS에서 지원해주는 함수) 2개의 argument를 가지는 function\n// 1) effect: 딱 한번만 실행될 함수\n// 2) deps: 마법같은친구..?\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [counter, setValue] = useState(0);\n\n  const onClick = () => setValue(prev => prev + 1); // 1. 항상 실행될 코드\n\n\n  console.log('This code runs all the time'); // 2. useEffect() 사용\n  // (컴포넌트가 처음에 render될 때의) 한번만 실행될 함수\n\n  const thisRunsOnlyOnce = () => {\n    console.log('I run only once');\n  }; // state가 변경되어도, 함수(ex. \"thisRunsOnlyOnce()\")가 한번만 실행된는 것을 확인해볼 수 있다!\n\n\n  useEffect(thisRunsOnlyOnce, []); // 2번째 param은 일단 빈 객체로 (나중에)\n  // useEffect(() => {\n  //   console.log('CALL THE API...');\n  // }); // 이렇게 하니까 state변경될때마다 매번 실행되네.. 왜지\n  // (위의 코드를 아래와 같이 단순화해서 표현가능)\n\n  useEffect(() => {\n    console.log('CALL THE API...');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"okIcLR2EaouQZtXc0AQUSigSdlQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/uniqlear/Documents/React/react-basics/create-react-app/src/App6.js"],"names":["useState","useEffect","App","counter","setValue","onClick","prev","console","log","thisRunsOnlyOnce"],"mappings":";;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;;AACA,QAAMK,OAAO,GAAG,MAAMD,QAAQ,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAA9B,CAFa,CAIb;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EALa,CAOb;AACA;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BF,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,GAFD,CATa,CAYb;;;AACAP,EAAAA,SAAS,CAACQ,gBAAD,EAAmB,EAAnB,CAAT,CAba,CAaoB;AAEjC;AACA;AACA;AAEA;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA,gBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GA9BQH,G;;KAAAA,G;AAgCT,eAAeA,GAAf","sourcesContent":["/* create-react-app 프로젝트를 기반으로 한 코드. 따로 이 폴더로 빼온 것 (실행 X) */\n\n/* 6-0의 문제에 대한 해결책: Effects (useEffect() 함수) */\n//? 특정 코드 실행의 제한 (특정 코드가, 첫번째 render에만 실행되고, 다른 state변화에는 실행되지 않도록 함)\n//! useEffect(): (ReactJS에서 지원해주는 함수) 2개의 argument를 가지는 function\n// 1) effect: 딱 한번만 실행될 함수\n// 2) deps: 마법같은친구..?\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [counter, setValue] = useState(0);\n  const onClick = () => setValue((prev) => prev + 1);\n\n  // 1. 항상 실행될 코드\n  console.log('This code runs all the time');\n\n  // 2. useEffect() 사용\n  // (컴포넌트가 처음에 render될 때의) 한번만 실행될 함수\n  const thisRunsOnlyOnce = () => {\n    console.log('I run only once');\n  };\n  // state가 변경되어도, 함수(ex. \"thisRunsOnlyOnce()\")가 한번만 실행된는 것을 확인해볼 수 있다!\n  useEffect(thisRunsOnlyOnce, []); // 2번째 param은 일단 빈 객체로 (나중에)\n\n  // useEffect(() => {\n  //   console.log('CALL THE API...');\n  // }); // 이렇게 하니까 state변경될때마다 매번 실행되네.. 왜지\n\n  // (위의 코드를 아래와 같이 단순화해서 표현가능)\n  useEffect(() => {\n    console.log('CALL THE API...');\n  }, []);\n\n  return (\n    <>\n      <h1>{counter}</h1>\n      <button onClick={onClick}>click me!</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}